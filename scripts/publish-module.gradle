apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
    }
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}
group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID
                version PUBLISH_VERSION
                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar
                artifact javadocJar

                pom {
                    name = PUBLISH_ARTIFACT_ID
                    description = 'Astarte Java Device SDK'
                    url = 'https://astarte-platform.org'
                    licenses {
                        license {
                            name = 'Apache License 2.0'
                            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'harlem88'
                            name = 'Antonio Gisondi'
                            email = 'antonio.gisondi@secomind.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/astarte-platform/astarte-device-sdk-java.git'
                        developerConnection = 'scm:git:ssh://github.com/astarte-platform/astarte-device-sdk-java.git'
                        url = 'https://github.com/astarte-platform/astarte-device-sdk-java'
                    }
                }
            }
        }
    }
}

ext["signing.password"] = rootProject.ext["signing.password"]
ext["signing.key"] = rootProject.ext["signing.key"]

signing {
    def signingKey = rootProject.ext["signing.key"].toString()
    def signingPassword = rootProject.ext["signing.password"].toString()

    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications
}
